<<<<<<< HEAD
[{"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\index.js":"1","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\Routes.js":"2","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Notfound.js":"3","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Dashboard.js":"4","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Signin.js":"5","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Signup.js":"6","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Home.js":"7","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Layout.js":"8","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Showflow.js":"9","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\apiHelper.js":"10","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\auth\\index.js":"11","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Menu.js":"12","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\config.js":"13","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx":"14","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js":"15","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx":"16","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Displayflow.js":"17","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js":"18"},{"size":227,"mtime":1644571679561,"results":"19","hashOfConfig":"20"},{"size":1396,"mtime":1644771143762,"results":"21","hashOfConfig":"20"},{"size":511,"mtime":1644571679560,"results":"22","hashOfConfig":"20"},{"size":1023,"mtime":1644602137200,"results":"23","hashOfConfig":"20"},{"size":3908,"mtime":1644770468441,"results":"24","hashOfConfig":"20"},{"size":4743,"mtime":1644765792739,"results":"25","hashOfConfig":"20"},{"size":2240,"mtime":1644643296297,"results":"26","hashOfConfig":"20"},{"size":948,"mtime":1644760240243,"results":"27","hashOfConfig":"20"},{"size":1686,"mtime":1644769725975,"results":"28","hashOfConfig":"20"},{"size":980,"mtime":1644655697437,"results":"29","hashOfConfig":"20"},{"size":1935,"mtime":1644571679557,"results":"30","hashOfConfig":"20"},{"size":3080,"mtime":1644771786846,"results":"31","hashOfConfig":"20"},{"size":49,"mtime":1644571970625,"results":"32","hashOfConfig":"20"},{"size":7284,"mtime":1644763955661,"results":"33","hashOfConfig":"20"},{"size":457,"mtime":1644583039006,"results":"34","hashOfConfig":"20"},{"size":2792,"mtime":1644679425311,"results":"35","hashOfConfig":"20"},{"size":6438,"mtime":1644663977373,"results":"36","hashOfConfig":"20"},{"size":610,"mtime":1644770721032,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"sdivk3",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\index.js",[],["80","81"],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\Routes.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Notfound.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Dashboard.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Signin.js",["82","83"],"import { isAuthenticated } from \"../auth\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { authenticate } from \"../auth\";\r\nimport { signin } from \"../auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Menu from '../core/Menu'\r\nimport classes from './Signup.module.css'\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'test@gmail.com',\r\n        password: '$Test123',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n    const { email, password, error, loading, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated()\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    // console.log(data.error.message)\r\n                    if (typeof data.error.message !== 'undefined')\r\n                        setValues({ ...values, error: data.error.message, loading: false })\r\n                    else\r\n                        setValues({ ...values, error: 'Validation failed', success: false });\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n    };\r\n    const signInForm = () => (\r\n        <form>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }}>Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }}>Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className={classes.btn}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && (<div className=\"alert alert-info\">\r\n            <h2>Loading...</h2>\r\n        </div>)\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            //console.log(user & user.role===1)\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/\" />;\r\n            } else {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div ><Menu>  </Menu>\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(5, 0, 255, 0.4)',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        }}>\r\n            <img style={{\r\n                marginTop: '10%', marginLeft: '15%', marginRight: '12%', borderRadius: '290px'\r\n            }} height=\"200px\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ7Mvq2MGMEzWXPTUfqbqgtlUazwyoOYpB7lA&usqp=CAU\"></img>\r\n\r\n            <div className={classes.rform}>\r\n                {showLoading()}\r\n                {showError()}\r\n                <div style={{ color: '#131D5A', paddingBottom: '20px' }}>            <h1 >Signin !</h1>\r\n                </div>\r\n                {signInForm()}\r\n                {redirectUser()}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Signup.js",["84","85"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup, authenticate } from '../auth';\r\nimport classes from './Signup.module.css'\r\nimport Menu from '../core/Menu';\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n    const [retype, setRetype] = useState('')\r\n\r\n    const { name, email, password, loading, error, redirectToReferrer } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const handlePassword = name => event => {\r\n        if (password === event.target.value) {\r\n            setValues({ ...values, error: false });\r\n            setRetype(event.target.value)\r\n        }\r\n        else {\r\n            setValues({ ...values, error: 'Passwords dont match' });\r\n            setRetype(event.target.value)\r\n        }\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        if (!error) {\r\n            setValues({ ...values, error: false, loading: true });\r\n            signup({ name, email, password }).then(data => {\r\n                //console.log(data)\r\n                if (data.error) {\r\n                    //console.log(data.error)\r\n                    if (typeof data.error.message !== 'undefined')\r\n                        setValues({ ...values, error: data.error.message, loading: false })\r\n                    else\r\n                        setValues({ ...values, error: 'Validation failed', success: false });\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true,\r\n\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Retype Password</label>\r\n                <input onChange={handlePassword()} type=\"password\" className=\"form-control\" value={retype} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className={classes.btn}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && <div className=\"alert alert-info\" >\r\n            Loading...\r\n        </div>\r\n    );\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n    return (<div><Menu>  </Menu>\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(5, 0, 255, 0.4)',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        }}>\r\n\r\n            <img style={{\r\n                marginTop: '10%', marginLeft: '15%', marginRight: '12%', borderRadius: '290px'\r\n            }} height=\"200px\" src=\"https://eligeeducar.cl/content/uploads/2021/10/un-astronauto-viendo-un-documental.jpg\"></img>\r\n\r\n            < div className={classes.rform} >\r\n                <div style={{ color: '#131D5A', paddingBottom: '20px' }}>            <h1 >Register!</h1>\r\n                </div>\r\n\r\n                {showLoading()}\r\n                {showError()}\r\n                {signUpForm()}\r\n            </div>\r\n            {redirectUser()}\r\n        </div >\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Home.js",["86","87"],"import Layout from \"./Layout\"\r\nimport { isAuthenticated } from '../auth'\r\nimport { getCategories,getFlows} from \"../user/apiHelper\";\r\nimport { useEffect,useState } from \"react\";\r\nconst Home = () => {\r\n    const [categories, setCategories] = useState(false)\r\n    const [flowcharts, setFlowcharts] = useState(false)\r\n    const [currentFlowChart, setCurrentFlowChart] = useState([])\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                \r\n                let mySet1 = new Set()\r\n                data.map((d, i) => {\r\n                    // console.log(d.category)\r\n                    mySet1.add(d.category)\r\n                })\r\n                const array = [...mySet1];\r\n                setCategories(array)\r\n            }\r\n        })\r\n\r\n        getFlows().then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                setFlowcharts(data)\r\n            }\r\n        })\r\n    };\r\n    const handleClick = (e) => {\r\n        setCurrentFlowChart([])\r\n        // console.log(e.target.value)\r\n        let x = []\r\n        flowcharts.map((fc, i) => {\r\n            // console.log(fc.category === e.target.value)\r\n            if(fc.category === e.target.value){\r\n                x.push(fc)\r\n            }\r\n        })\r\n        setCurrentFlowChart(x)\r\n        // console.log(currentFlowChart)\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n    return (\r\n        <Layout title=\"Welcome to Flowtion\" description=\"..\">\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 &&\r\n                    categories && categories.map((fc, i) => {\r\n                        return (<div key={i}>\r\n        \r\n                            <button key={i} value={fc} onClick={(e) => handleClick(e)} >\r\n                                {fc}\r\n        \r\n                            </button>\r\n                            <br></br>\r\n                            <br></br>\r\n        \r\n                        </div>)\r\n                    })\r\n            }\r\n            {JSON.stringify(currentFlowChart)}\r\n        </Layout>\r\n\r\n    )\r\n}\r\nexport default Home;","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Layout.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Showflow.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\apiHelper.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\auth\\index.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\core\\Menu.js",["88"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { isAuthenticated, signout } from \"../auth\";\r\nimport classes from './Menu.module.css'\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { backgroundColor: '#131D5A', borderRadius: '30px', color: 'white' }\r\n    }\r\n    else {\r\n        return { color: 'black', fontWeight: 'bolder' }\r\n    }\r\n}\r\n\r\nconst Menu = (props) => {\r\n    return (<div>\r\n        <ul className={`nav nav-tabs justify-content-start ${classes.nav}`} style={{ float: 'left', width: '50%', margin: 0, padding: 0 }}>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(props.history, '/')} to=\"/\"><img height=\"80px\" src=\"https://www.logomaker.com/api/main/images/1j+ojFVDOMkX9Wytexe43D6khvGCpB5Lmh3NwXs1M3EMoAJtliQpgfRu9...8y\"></img></Link>\r\n            </li>\r\n            {isAuthenticated() &&\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(props.history, '/dashboard')} to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n            }\r\n\r\n\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 0 &&\r\n                (\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, \"/user/dashboard\")} to=\"/user/dashboard\">Dashboard</Link>\r\n                    </li>\r\n                )\r\n            }\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 &&\r\n                (\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, \"/admin/dashboard\")} to=\"/admin/dashboard\">Dashboard</Link>\r\n                    </li>\r\n                )\r\n            } */}\r\n\r\n\r\n        </ul>\r\n        <ul className={`nav nav-tabs justify-content-end ${classes.nav}`} style={{ float: 'right', width: '50%', margin: '0', padding: '25px', paddingRight: '50px' }}>\r\n            {!isAuthenticated() &&\r\n                <React.Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, '/signin')} to=\"/signin\">Signin</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, '/signup')} to=\"/signup\">Signup</Link>\r\n                    </li>\r\n                </React.Fragment>\r\n            }\r\n            {isAuthenticated() &&\r\n                <li className=\"nav-item \" >\r\n                    <span className={`nav-link ${classes.signout}`} style={{ cursor: 'pointer', fontWeight: 'bolder' }} onClick={\r\n                        () =>\r\n                            signout(() => {\r\n                                props.history.push(\"/\")\r\n                            })\r\n                    }>Signout</span>\r\n                </li>\r\n            }\r\n\r\n\r\n\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Menu);\r\n","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\config.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx",[],"C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\user\\Displayflow.js",["89","90","91","92","93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport ReactFlow, {\r\n    removeElements,\r\n    updateEdge,\r\n    addEdge,\r\n    Background,\r\n    MiniMap,\r\n    Controls\r\n} from \"react-flow-renderer\";\r\nimport { nodeTypes } from \"../react-flow-renderer/Nodes\";\r\nimport { getFlow } from './apiHelper'\r\nimport Layout from \"../core/Layout\";\r\nconst Displayflow = (props) => {\r\n    const [elements, setElements] = useState(props.elements);\r\n    const [answer, setAnswer] = useState(props.elements);\r\n    const [arr, setArr] = useState([])\r\n    const [flag, setFlag] = useState(false)\r\n    const [activeNode, setActiveNode] = useState();\r\n    const [clicked, setClicked] = useState(false)\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [instance, setInstance] = useState();\r\n\r\n    useEffect(() => {\r\n        console.log(props.elements)\r\n        showCurrentFlow(props.match.params.id)\r\n        if (activeNode) setNewName(activeNode.data.label);\r\n    }, [activeNode]);\r\n\r\n    const connectHandler = (params) => {\r\n        setElements((prev) => addEdge(params, prev));\r\n    };\r\n    const edgeUpdateHandler = (oldEdge, newConnection) =>\r\n        setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n    const onLoad = (reactFlowInstance) => {\r\n        setInstance(reactFlowInstance);\r\n        reactFlowInstance.fitView();\r\n    };\r\n    const shuffle = (array) => {\r\n        let currentIndex = array.length, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (currentIndex != 0) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n\r\n            // And swap it with the current element.\r\n            [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex], array[currentIndex]];\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    var arr1 = []\r\n    const showCurrentFlow = (id) => {\r\n        getFlow(id)\r\n            .then(data => {\r\n                if (data.error) {\r\n\r\n                } else {\r\n                    console.log(data.nodes)\r\n                    setAnswer(data.nodes)\r\n                    let x = data.nodes;\r\n                    let y = []\r\n\r\n                    for (let i of x) {\r\n                        if (i.hasOwnProperty(\"position\")) {\r\n                            y.push(i)\r\n                        }\r\n                        else {\r\n                            let p = arr\r\n                            p.push(i)\r\n                            setArr(p)\r\n                        }\r\n\r\n                    }\r\n                    y = shuffle(y)\r\n                    let z = 0\r\n                    for (let i of y) {\r\n\r\n                        i[\"position\"][\"x\"] = 200\r\n                        i[\"position\"][\"y\"] = 100 * z\r\n                        z++;\r\n                    }\r\n                    setElements(y)\r\n                }\r\n            });\r\n    }\r\n    const saveChangesHandler = () => {\r\n        setClicked(true)\r\n\r\n        if (elements.length !== answer.length)\r\n            console.log(\"wrong answer\")\r\n        else {\r\n\r\n            // for (let ele of answer) {\r\n            //     const index = elements.findIndex((element) => JSON.stringify(element) === JSON.stringify(ele);\r\n            //     if (index === -1)\r\n            //         console.log(\"wrong \")\r\n            // }\r\n            var x = elements\r\n            for (let i of x) {\r\n                if (i.hasOwnProperty(\"position\") === false) {\r\n                    arr1.push(i)\r\n                }\r\n            }\r\n\r\n            arr.sort();\r\n            arr1.sort();\r\n            console.log(arr)\r\n            console.log(arr1)\r\n            let i = 0\r\n\r\n            for (i = 0; i < arr.length; i++) {\r\n\r\n                let src = arr[i][\"source\"]\r\n\r\n                var index = arr1.findIndex((a) => (a[\"source\"] === src))\r\n\r\n                if (arr1[index][\"target\"] !== arr[i][\"target\"]) {\r\n                    console.log(\"wrong answer\")\r\n\r\n                    break;\r\n                }\r\n            }\r\n            if (i == arr.length) {\r\n                console.log(\"correct\")\r\n                setFlag(true)\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Flowchart\">\r\n            <div\r\n                style={{\r\n                    height: \"75vh\",\r\n                    width: \"75vw\",\r\n                    border: \"1px solid black\",\r\n                    marginLeft: \"12.5vw\"\r\n                }}\r\n            >\r\n\r\n                <ReactFlow\r\n                    elements={elements}\r\n                    onConnect={connectHandler}\r\n                    deleteKeyCode={8 || 46}\r\n                    onEdgeUpdate={edgeUpdateHandler}\r\n                    nodeTypes={nodeTypes}\r\n                    snapToGrid={true}\r\n                    snapGrid={[16, 16]}\r\n                    connectionLineStyle={{ stroke: \"black\", strokeWidth: 2 }}\r\n                    onLoad={onLoad}\r\n                >\r\n                    <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\r\n\r\n                    <MiniMap\r\n                        nodeColor={(node) => {\r\n                            switch (node.type) {\r\n                                case \"rectangle\":\r\n                                    return \"red\";\r\n                                case \"startNode\":\r\n                                    return \"#00ff00\";\r\n                                case \"endNode\":\r\n                                    return \"rgb(0,0,255)\";\r\n                                case \"paraNode\":\r\n                                    return \"rgb(120,120,120)\"\r\n                                default:\r\n                                    return \"#eee\";\r\n                            }\r\n                        }}\r\n                    />\r\n\r\n                    <Controls />\r\n                </ReactFlow>\r\n\r\n\r\n\r\n\r\n                <button type=\"button\" onClick={saveChangesHandler}>\r\n                    Save changes\r\n                </button>\r\n                {\r\n                    flag && <div>\r\n                        correct answer\r\n                    </div>\r\n                }\r\n                {\r\n\r\n                    !flag && clicked && <div>\r\n                        wrong answer\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </Layout >\r\n\r\n    );\r\n};\r\n\r\nexport default withRouter(Displayflow);","C:\\Users\\Krishna\\Desktop\\codathon\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":92,"column":13,"nodeType":"106","endLine":94,"endColumn":137},{"ruleId":"100","severity":1,"message":"101","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":114,"column":13,"nodeType":"106","endLine":116,"endColumn":123},{"ruleId":"107","severity":1,"message":"108","line":16,"column":33,"nodeType":"109","messageId":"110","endLine":16,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":37,"column":32,"nodeType":"109","messageId":"110","endLine":37,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":18,"column":88,"nodeType":"106","endLine":18,"endColumn":218},{"ruleId":"100","severity":1,"message":"111","line":5,"column":5,"nodeType":"102","messageId":"103","endLine":5,"endColumn":19},{"ruleId":"100","severity":1,"message":"112","line":20,"column":24,"nodeType":"102","messageId":"103","endLine":20,"endColumn":37},{"ruleId":"100","severity":1,"message":"113","line":22,"column":12,"nodeType":"102","messageId":"103","endLine":22,"endColumn":19},{"ruleId":"100","severity":1,"message":"114","line":23,"column":12,"nodeType":"102","messageId":"103","endLine":23,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":29,"column":8,"nodeType":"117","endLine":29,"endColumn":20,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":45,"column":29,"nodeType":"121","messageId":"122","endLine":45,"endColumn":31},{"ruleId":"119","severity":1,"message":"123","line":131,"column":19,"nodeType":"121","messageId":"122","endLine":131,"endColumn":21},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeElements' is defined but never used.","'setActiveNode' is assigned a value but never used.","'newName' is assigned a value but never used.","'instance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.elements', 'props.match.params.id', and 'showCurrentFlow'. Either include them or remove the dependency array.","ArrayExpression",["126"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [activeNode, props.elements, props.match.params.id, showCurrentFlow]",{"range":"129","text":"130"},[1008,1020],"[activeNode, props.elements, props.match.params.id, showCurrentFlow]"]
=======
[{"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\Routes.js":"2","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Notfound.js":"3","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Home.js":"4","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Signin.js":"5","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Signup.js":"6","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Showflow.js":"7","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\apiHelper.js":"8","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\auth\\index.js":"9","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\config.js":"10","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx":"11","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Menu.js":"12","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js":"13","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx":"14","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Displayflow.js":"15","C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js":"16"},{"size":227,"mtime":1644567930773,"results":"17","hashOfConfig":"18"},{"size":1233,"mtime":1644781057359,"results":"19","hashOfConfig":"18"},{"size":539,"mtime":1644776080092,"results":"20","hashOfConfig":"18"},{"size":3259,"mtime":1644782282937,"results":"21","hashOfConfig":"18"},{"size":3868,"mtime":1644780546023,"results":"22","hashOfConfig":"18"},{"size":4705,"mtime":1644780555053,"results":"23","hashOfConfig":"18"},{"size":1746,"mtime":1644781877037,"results":"24","hashOfConfig":"18"},{"size":1410,"mtime":1644694172969,"results":"25","hashOfConfig":"18"},{"size":1935,"mtime":1644472999046,"results":"26","hashOfConfig":"18"},{"size":49,"mtime":1644472999046,"results":"27","hashOfConfig":"18"},{"size":8623,"mtime":1644781789123,"results":"28","hashOfConfig":"18"},{"size":2359,"mtime":1644781692998,"results":"29","hashOfConfig":"18"},{"size":457,"mtime":1644588307212,"results":"30","hashOfConfig":"18"},{"size":2792,"mtime":1644679383266,"results":"31","hashOfConfig":"18"},{"size":9009,"mtime":1644781912577,"results":"32","hashOfConfig":"18"},{"size":610,"mtime":1644775671747,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1w6hdk8",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\index.js",[],["67","68"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\Routes.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Notfound.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Home.js",["69","70"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Signin.js",["71"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Signup.js",["72"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Showflow.js",["73"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\apiHelper.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\auth\\index.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\config.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\core\\Menu.js",["74"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx",[],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\user\\Displayflow.js",["75","76","77","78","79","80","81"],"C:\\Users\\Admin\\Flowtion\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":33,"nodeType":"88","messageId":"89","endLine":19,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":40,"column":32,"nodeType":"88","messageId":"89","endLine":40,"endColumn":34},{"ruleId":"90","severity":1,"message":"91","line":91,"column":13,"nodeType":"92","endLine":93,"endColumn":137},{"ruleId":"90","severity":1,"message":"91","line":113,"column":13,"nodeType":"92","endLine":115,"endColumn":123},{"ruleId":"93","severity":1,"message":"94","line":7,"column":12,"nodeType":"95","messageId":"96","endLine":7,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":18,"column":51,"nodeType":"92","endLine":18,"endColumn":181},{"ruleId":"93","severity":1,"message":"97","line":8,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":19},{"ruleId":"93","severity":1,"message":"98","line":22,"column":24,"nodeType":"95","messageId":"96","endLine":22,"endColumn":37},{"ruleId":"93","severity":1,"message":"99","line":24,"column":12,"nodeType":"95","messageId":"96","endLine":24,"endColumn":19},{"ruleId":"93","severity":1,"message":"100","line":25,"column":12,"nodeType":"95","messageId":"96","endLine":25,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":40,"column":8,"nodeType":"103","endLine":40,"endColumn":20,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":56,"column":29,"nodeType":"107","messageId":"108","endLine":56,"endColumn":31},{"ruleId":"105","severity":1,"message":"109","line":155,"column":19,"nodeType":"107","messageId":"108","endLine":155,"endColumn":21},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'flowcharts' is assigned a value but never used.","Identifier","unusedVar","'removeElements' is defined but never used.","'setActiveNode' is assigned a value but never used.","'newName' is assigned a value but never used.","'instance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.elements', 'props.match.params.id', and 'showCurrentFlow'. Either include them or remove the dependency array.","ArrayExpression",["112"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [activeNode, props.elements, props.match.params.id, showCurrentFlow]",{"range":"115","text":"116"},[1422,1434],"[activeNode, props.elements, props.match.params.id, showCurrentFlow]"]
>>>>>>> 01bcd04e9ee9e455ef7644ac0799b9473fd5da74
